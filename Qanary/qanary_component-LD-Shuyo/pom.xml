<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>eu.wdaqua.qanary.component</groupId>
	<artifactId>qanary_component-LD-Shuyo</artifactId>
	<version>1.0.0</version>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.3.3.RELEASE</version>
	</parent>
	<properties>
		<java.version>1.8</java.version>
		<qanary.version>[1.,2.)</qanary.version>
		<docker.image.prefix>qanary</docker.image.prefix>
		<!-- Replace the name of the docker image to be generated -->
		<docker.image.name>my-qanary-component</docker.image.name>
		<profile_directory>${basedir}/src/main/resources/language-detection/profiles</profile_directory>
	</properties>

	<dependencies>
		<dependency>
			<groupId>eu.wdaqua.qanary</groupId>
			<artifactId>qa.component</artifactId>
			<version>${qanary.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-starter-client</artifactId>
			<version>1.3.0</version>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>hamcrest-core</artifactId>
					<groupId>org.hamcrest</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>3.2.2.RELEASE</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>0.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path-assert</artifactId>
			<version>0.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.cybozu.labs</groupId>
			<artifactId>langdetect</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.cybozu.labs</groupId>
			<artifactId>jsonic</artifactId>
			<version>1.2.0</version>
		</dependency>
	</dependencies>
	<build>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>0.4.10</version>
					<executions>
						<execution>
							<id>build-image</id>
							<phase>package</phase>
							<goals>
								<goal>build</goal>
							</goals>
							<configuration>
								<imageName>${docker.image.prefix}/${docker.image.name}</imageName>
								<dockerDirectory>${basedir}/docker</dockerDirectory>
								<resources>
									<resource>
										<targetPath>/</targetPath>
										<directory>${project.build.directory}</directory>
										<include>${project.artifactId}-${project.version}.jar</include>
									</resource>
								</resources>
								<imageTags>
									<imageTag>${project.version}</imageTag>
								</imageTags>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>properties-maven-plugin</artifactId>
					<version>1.0-alpha-2</version>
					<executions>
						<execution>
							<phase>generate-resources</phase>
							<goals>
								<goal>write-project-properties</goal>
							</goals>
							<configuration>
								<outputFile>${basedir}/src/main/resources/config/my.properties</outputFile>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
			<pluginManagement>
				<plugins>
					<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
					<plugin>
						<groupId>org.eclipse.m2e</groupId>
						<artifactId>lifecycle-mapping</artifactId>
						<version>1.0.0</version>
						<configuration>
							<lifecycleMappingMetadata>
								<pluginExecutions>
									<pluginExecution>
										<pluginExecutionFilter>
											<groupId>
												org.codehaus.mojo
											</groupId>
											<artifactId>
												properties-maven-plugin
											</artifactId>
											<versionRange>
												[1.0-alpha-2,)
											</versionRange>
											<goals>
												<goal>
													write-project-properties
												</goal>
											</goals>
										</pluginExecutionFilter>
										<action>
											<ignore></ignore>
										</action>
									</pluginExecution>
								</pluginExecutions>
							</lifecycleMappingMetadata>
						</configuration>
					</plugin>
				</plugins>
			</pluginManagement>
	</build>
	<repositories>
		<repository>
			<id>in-project</id>
			<name>In Project Repo</name>
			<url>file://${project.basedir}/libs</url>
		</repository>
	</repositories>
</project>
